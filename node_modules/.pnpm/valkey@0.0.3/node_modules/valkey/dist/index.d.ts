import { ValkeyModules, ValkeyFunctions, ValkeyScripts, ValkeyClientOptions, ValkeyClientType as _ValkeyClientType, ValkeyClusterOptions, ValkeyClusterType as _ValkeyClusterType } from 'valkey-client';
export * from 'valkey-client';
export * from 'valkey-bloom';
export * from 'valkey-graph';
export * from 'valkey-json';
export * from 'valkey-search';
export * from 'valkey-time-series';
declare const modules: any;
export type ValkeyDefaultModules = typeof modules;
export type ValkeyClientType<M extends ValkeyModules = ValkeyDefaultModules, F extends ValkeyFunctions = Record<string, never>, S extends ValkeyScripts = Record<string, never>> = _ValkeyClientType<M, F, S>;
export declare function createClient<M extends ValkeyModules, F extends ValkeyFunctions, S extends ValkeyScripts>(options?: ValkeyClientOptions<M, F, S>): _ValkeyClientType<ValkeyDefaultModules & M, F, S>;
export type ValkeyClusterType<M extends ValkeyModules = ValkeyDefaultModules, F extends ValkeyFunctions = Record<string, never>, S extends ValkeyScripts = Record<string, never>> = _ValkeyClusterType<M, F, S>;
export declare function createCluster<M extends ValkeyModules, F extends ValkeyFunctions, S extends ValkeyScripts>(options: ValkeyClusterOptions<M, F, S>): ValkeyClusterType<ValkeyDefaultModules & M, F, S>;
